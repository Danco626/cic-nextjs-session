"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...auth0]";
exports.ids = ["pages/api/auth/[...auth0]"];
exports.modules = {

/***/ "@auth0/nextjs-auth0":
/*!**************************************!*\
  !*** external "@auth0/nextjs-auth0" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@auth0/nextjs-auth0");

/***/ }),

/***/ "(api)/./pages/api/auth/[...auth0].js":
/*!**************************************!*\
  !*** ./pages/api/auth/[...auth0].js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth0/nextjs-auth0 */ \"@auth0/nextjs-auth0\");\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Fires when authentication completes, before redirecting to the originating URL (/).\n * When the user first signs in, we use the default session object containing the custom API accesstoken.\n * This function fires again after requesting the MFA access token. \n * We check for the enroll scope to determine it's the MFA API access token and adding it to the original session. * \n */ const afterCallback = async (req, res, session, state)=>{\n    //get previous session. Null on initial login\n    const ogSession = await (0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.getSession)(req, res);\n    //if offline_access, assume this is the custom API access token (initial auth)\n    // and save the tokens to apiAccessToken object \n    // if (session.accessTokenScope.includes(\"offline_access\")) {\n    //   session.apiAcessToken = {\n    //     accessToken: session.accessToken,\n    //     accessTokenExpiresAt: session.accessTokenExpiresAt,\n    //     refresh: session.refreshToken,\n    //   };\n    // }\n    //if MFA token, add to old session and continue using\n    if (session.accessTokenScope.includes(\"enroll\")) {\n        ogSession.mfaAccessToken = {\n            accessToken: session.accessToken,\n            accessTokenScope: session.accessTokenScope,\n            accessTokenExpiresAt: session.accessTokenExpiresAt\n        };\n    }\n    return ogSession ? ogSession : session;\n};\n/**\n * Determine audience/scope based on mfa query param. \n */ /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.handleAuth)({\n    login: async (req, res)=>{\n        try {\n            console.log(req);\n            const authParams = req.query.mfa ? {\n                audience: \"https://danco.auth0.com/mfa/\",\n                scope: \"openid profile email enroll read:authenticators remove:authenticators\"\n            } : {\n                audience: \"https://expenses-api\",\n                scope: \"openid profile email read:reports offline_access\"\n            };\n            await (0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.handleLogin)(req, res, {\n                authorizationParams: authParams\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    async callback (req, res) {\n        try {\n            await (0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.handleCallback)(req, res, {\n                afterCallback\n            });\n        } catch (error) {\n            res.status(error.status || 500).end();\n        }\n    }\n})); // //import { handleAuth, handleCallback, handleLogin } from \"@auth0/nextjs-auth0\";\n // import getAuth0 from '../../../utils/customsessionstore';\n // const afterCallback = (req, res, session, state) => {\n //   console.log(session);\n //   if (session.accessTokenScope.includes(\"offline_access\")) {\n //     session.user.apiAcessToken = {\n //       accessToken: session.accessToken,\n //       accessTokenExpiresAt: session.accessTokenExpiresAt,\n //       refresh: session.refreshToken,\n //     };\n //   }\n //   if (session.accessTokenScope.includes(\"enroll\")) {\n //     session.user.mfaAccessToken = {\n //       accessToken: session.accessToken,\n //       accessTokenExpiresAt: session.accessTokenExpiresAt,\n //     };\n //   }\n //   console.log(\"in callback\");\n //   return session;\n // };\n // export default getAuth0().handleAuth({\n //   login: async (req, res) => {\n //     try {\n //       console.log(req);\n //       const authParams = req.query.mfa\n //         ? {\n //             audience: \"https://danco.auth0.com/mfa/\",\n //             scope:\n //               \"openid profile email enroll read:authenticators remove:authenticators\",\n //           }\n //         : {\n //             audience: \"https://expenses-api\",\n //             scope: \"openid profile email read:reports offline_access\",\n //           };\n //       await getAuth0().handleLogin(req, res, {\n //         authorizationParams: authParams,\n //       });\n //     } catch (error) {\n //       console.error(error);\n //     }\n //   },\n //   async callback(req, res) {\n //     try {\n //       await getAuth0().handleCallback(req, res, { afterCallback });\n //     } catch (error) {\n //       res.status(error.status || 500).end();\n //     }\n //   },\n // });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...auth0].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/[...auth0].js"));
module.exports = __webpack_exports__;

})();